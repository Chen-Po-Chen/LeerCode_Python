# Remove Nth Node From End of List

# Given a linked list, remove the n-th node from the end of list and return its head.

# Example:
# Given linked list: 1->2->3->4->5, and n = 2.
# After removing the second node from the end, the linked list becomes 1->2->3->5.

# Note:
# Given n will always be valid.

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        current = head
        follow = current
        previous = follow
        
        for _ in range(n):
            current = current.next
            
        if current == None:
            return head.next
        
        while current != None:
            previous = follow
            current = current.next
            follow = follow.next
        previous.next = follow.next
        
        return head
